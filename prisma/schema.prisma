// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String?
  image     String?
  bio     String?
  username String?   @unique
  isVerified Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tweets  Tweet[]
  tokens  Token[]
  bookmarks Bookmarks[]
}

model Token {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String  @db.ObjectId
  user   User     @relation(fields: [userId], references: [id])
  emailToken   String?   @unique
  type   TokenType
  valid  Boolean @default(true)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tweet {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  content String
  image   String?
  author  User     @relation(fields: [authorId], references: [id])
  authorId String  @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  impressions Int @default(0)
}

model Bookmarks {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  tweetId String
  userId  String @db.ObjectId
  user   User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follows {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  followerId String
  followingId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TokenType {
  EMAIL
  API
}